from aiogram.dispatcher.filters.state import StatesGroup, State
from Logger import bot, dp
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton
from string import Template
from aiogram.dispatcher import FSMContext

class Test(StatesGroup):
    Q1 = State() # name of device
    Q2 = State() # name of client
    Q3 = State() # address
    Q4 = State() # telephone number

@dp.message_handler(Command('zakaz'), state=None)
async def start_order_kz(message: types.Message):
    await message.answer("“ö–∞–Ω–¥–∞–π –¥—Ä–æ–±–∏–ª–∫–∞“ì–∞ —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–µ—Å—ñ–∑? –ú—ã—Å–∞–ª—ã(–ñ–µ–º–≥–µ, 3–ö–í—Ç)")
    await Test.Q1.set()

@dp.message_handler(state=Test.Q1)
async def qu1(message: types.Message, state=FSMContext):
    answer = message.text
    global ans1
    ans1 = answer
    await state.update_data(answer1 = answer)
    await message.answer("–ï—Å—ñ–º—ñ“£—ñ–∑")
    await Test.next()

@dp.message_handler(state=Test.Q2)
async def qu2(message: types.Message, state=FSMContext):
    answer = message.text
    global ans2
    ans2 = answer
    await state.update_data(answer2 = answer)
    await message.answer("“ö–∞–π –∂–µ—Ä–≥–µ –∂–µ—Ç–∫—ñ–∑–µ–º—ñ–∑(”®—Ç—ñ–Ω—ñ—à —Ç–æ–ª—ã“õ“õ–∞–Ω–¥—ã –º–µ–∫–µ–Ω-–∂–∞–π—ã“£—ã–∑–¥—ã –∂–∞–∑—É—ã“£—ã–∑–¥—ã —Å“±—Ä–∞–π–º—ã–∑!)")
    await Test.next()

@dp.message_handler(state=Test.Q3)
async def qu3(message: types.Message, state=FSMContext):
    answer = message.text
    global ans3
    ans3 = answer
    await state.update_data(answer3 = answer)
    await message.answer("–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä—ñ“£—ñ–∑üì±?")
    await Test.next()


@dp.message_handler(state=Test.Q4)
async def qu4(message: types.Message, state=FSMContext):
    answer = int(message.text)
    global ans4
    ans4 = answer
    t = Template('–î—Ä–æ–±–∏–ª–∫–∞ —Ç–∏–ø—ñ: $type\n –ï—Å—ñ–º—ñ: $name\n –ú–µ–∫–µ–Ω-–∂–∞–π—ã: $address\n –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä—ñ: $num')
    #info = t.substitute(dict(console=type_of_console, name=ans1, number=ans2, address=ans3, payments=ans4))
    info = t.substitute(dict(type=ans1, name=ans2, address=ans3, num=ans4))
    await state.update_data(answer4 = answer)
    data = await state.get_data()
    await bot.send_message(chat_id='@zakaz_drobilka', text=info)
    await bot.send_message(message.from_user.id, "–¢–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–≥–µ–Ω“£—ñ–∑–≥–µ —Ä–∞“õ–º–µ—Çüëçüèª, —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É “Ø—à—ñ–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å–∞–¥—ã. –¢”©–ª–µ–º–¥—ñ –∂–µ—Ç–∫—ñ–∑—ñ–ª–≥–µ–Ω —Å–æ“£ —Ç”©–ª–µ—Å–µ“£—ñ–∑ –±–æ–ª–∞–¥—ãüöõüòâ")
    await state.finish()
